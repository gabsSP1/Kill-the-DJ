{
    "swagger": "2.0",
    "info": {
        "version": "v1",
        "title": "Kill the DJ",
        "description": "API for session and tracklist management in the Kill the DJ mopidy extension"
    },
    "host": "localhost:6680",
    "basePath": "/killthedj",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/tracks/searches": {
            "post": {
                "operationId": "search",
                "summary": "Search",
                "tags": [
                    "Tracks"
                ],
                "description": "Search the library for tracks where ``field`` contains ``values``.\n``field`` can be one of ``uri``, ``track_name``, ``album``, ``artist``,\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\n``date``, ``comment`` or ``any``.\n\nIf ``uris`` is given, the search is limited to results from within the\nURI roots. For example passing ``{\"uris\": [\"file:\"]`` will limit the search\nto the local backend.\n\n### Attributes\n- `query` – one or more queries to search for  \n- `uris` (list of string or None) – zero or more URI roots to limit the search to  \n- `exact` (bool) – if the search should use exact matching\n\n### Examples\n\n- Returns results matching 'a' in any backend:  \n```json\n{\n  \"query\": {\n    \"any\": [\"a\"]\n  }\n}\n```\n\n- Returns results matching artist 'xyz' in any backend:  \n```json\n{\n  \"query\": {\n    \"artist\": [\"xyz\"]\n  }\n}\n```\n\n- Returns results matching 'a' and 'b' and artist 'xyz' in any backend:  \n```json\n{\n  \"query\": {\n    \"any\": [\"a\", \"b\"],\n    \"artist\": [\"xyz\"]\n  }\n}\n```\n\n- Returns results matching 'a' if within the given URI roots\n\"file:///media/music\" and \"spotify:\":  \n\n`{'any': ['a']}, }`\n```json\n{\n  \"query\": {\n    \"any\": [\"a\"],\n    \"artist\": [\"xyz\"]\n  },\n  \"uris\": [\"file:///media/music\", \"spotify:\"]\n}\n```\n\n- Returns results matching artist 'xyz' and 'abc' in any backend:  \n```json\n{\n  \"query\": {\n    \"artist\": [\"xyz\", \"abc\"]\n  },\n}\n```\n\n## Success\nA successful request has returns an array of serach results, with status code `201`. Every item in the array is a json representation of a [mopidy data model](https://docs.mopidy.com/en/latest/api/models/#module-mopidy.models), e.g. `Track`, `Artist`, `Album` etc.\n\n## Errors\nFor client errors the response status code is `400`, and the body contains an error message. For example a malformed search request.\n\nFor errors in the backend the response status code is `500`, and the body contains an error message.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "query": {
                                    "type": "object",
                                    "properties": {
                                        "uri": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "track_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "album": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "artist": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "albumartist": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "composer": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "performer": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "track_no": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "genre": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "date": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "comment": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "any": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "uris": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "exact": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "query",
                                "uris",
                                "exact"
                            ],
                            "example": {
                                "query": {
                                    "uri": [
                                        "ut Ut reprehenderit"
                                    ],
                                    "track_name": [
                                        "irure labore enim",
                                        "sunt quis",
                                        "id sint aliqua"
                                    ],
                                    "album": [
                                        "sit incididunt"
                                    ],
                                    "artist": [
                                        "laboris",
                                        "in eu tempor veniam sit",
                                        "in ex et"
                                    ],
                                    "albumartist": [
                                        "ullamco dolore in ad et",
                                        "ve",
                                        "esse",
                                        "ex",
                                        "aliqua cillum eu"
                                    ],
                                    "composer": [
                                        "ut"
                                    ],
                                    "performer": [
                                        "dolor occaecat non aute",
                                        "commodo sunt",
                                        "cillum",
                                        "adipisicing ad",
                                        "occaecat est adipisicing Du"
                                    ],
                                    "track_no": [
                                        "aliqua eu proident",
                                        "incididunt in dolor ipsum deserunt",
                                        "laborum",
                                        "et",
                                        "esse dolor"
                                    ],
                                    "genre": [
                                        "et eiusmod elit",
                                        "incididunt",
                                        "mollit proident tempor",
                                        "deseru",
                                        "commodo ut pariatur nostrud do"
                                    ],
                                    "date": [
                                        "Ut id in",
                                        "eu dolore fugiat"
                                    ],
                                    "comment": [
                                        "nisi laboris laborum consectetur",
                                        "cillum"
                                    ],
                                    "any": [
                                        "qui non"
                                    ]
                                },
                                "uris": [
                                    "deserunt Excepteur quis",
                                    "et sunt est in",
                                    "reprehenderit ut officia",
                                    "ex eiusmod",
                                    "magna dolore ut et anim"
                                ],
                                "exact": false
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "result": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "track": {
                                                "type": "object",
                                                "required": [
                                                    "album",
                                                    "__model__",
                                                    "name",
                                                    "uri",
                                                    "length",
                                                    "last_modified",
                                                    "track_no",
                                                    "artists"
                                                ],
                                                "properties": {
                                                    "album": {
                                                        "type": "object",
                                                        "required": [
                                                            "__model__",
                                                            "name"
                                                        ],
                                                        "properties": {
                                                            "__model__": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "composers": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "__model__": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "__model__",
                                                                "name"
                                                            ]
                                                        }
                                                    },
                                                    "__model__": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "performers": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "__model__": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "__model__",
                                                                "name"
                                                            ]
                                                        }
                                                    },
                                                    "disc_no": {
                                                        "type": "integer"
                                                    },
                                                    "uri": {
                                                        "type": "string"
                                                    },
                                                    "comment": {
                                                        "type": "string"
                                                    },
                                                    "date": {
                                                        "type": "string"
                                                    },
                                                    "length": {
                                                        "type": "integer"
                                                    },
                                                    "last_modified": {
                                                        "type": "integer"
                                                    },
                                                    "track_no": {
                                                        "type": "integer"
                                                    },
                                                    "artists": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "__model__": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "__model__",
                                                                "name"
                                                            ]
                                                        }
                                                    },
                                                    "genre": {
                                                        "type": "string"
                                                    },
                                                    "musicbrainz_id": {
                                                        "type": "string"
                                                    },
                                                    "bitrate": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        },
                                        "required": [
                                            "track"
                                        ]
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "result": [
                                    {
                                        "track": {
                                            "album": {
                                                "__model__": "in est ir",
                                                "name": "aliquip velit dese"
                                            },
                                            "composers": [
                                                {
                                                    "__model__": "fugiat reprehenderit ex",
                                                    "name": "pariatur do dolor ullamco"
                                                },
                                                {
                                                    "__model__": "aute in",
                                                    "name": "officia ipsum anim commodo"
                                                },
                                                {
                                                    "__model__": "officia esse laboris ipsum",
                                                    "name": "veniam sint nulla exercitation"
                                                }
                                            ],
                                            "__model__": "elit",
                                            "name": "cillum laborum in deserunt Duis",
                                            "performers": [
                                                {
                                                    "__model__": "ullamco laboris",
                                                    "name": "commodo dolore laboris id anim"
                                                },
                                                {
                                                    "__model__": "Duis dolor",
                                                    "name": "cupidatat consequat occaecat"
                                                },
                                                {
                                                    "__model__": "mollit ut cillum incididunt",
                                                    "name": "mollit Duis"
                                                },
                                                {
                                                    "__model__": "dolore ut commodo",
                                                    "name": "pariatur Excepteur "
                                                }
                                            ],
                                            "disc_no": 88765901,
                                            "uri": "fugiat enim ut Excepteur id",
                                            "comment": "culpa",
                                            "date": "fugiat dolo",
                                            "length": 31000023,
                                            "last_modified": -73172010,
                                            "track_no": -72609450,
                                            "artists": [
                                                {
                                                    "__model__": "qui voluptate",
                                                    "name": "laborum non labore"
                                                }
                                            ],
                                            "genre": "irure in voluptate sed ipsum",
                                            "musicbrainz_id": "do ullamco veniam",
                                            "bitrate": 71475157
                                        }
                                    },
                                    {
                                        "track": {
                                            "album": {
                                                "__model__": "amet",
                                                "name": "aliquip cupidatat"
                                            },
                                            "composers": [
                                                {
                                                    "__model__": "Excepteur velit et",
                                                    "name": "nulla"
                                                }
                                            ],
                                            "__model__": "sunt veniam dolore qui",
                                            "name": "in",
                                            "performers": [
                                                {
                                                    "__model__": "irure",
                                                    "name": "ut reprehenderit"
                                                }
                                            ],
                                            "disc_no": -70645375,
                                            "uri": "mo",
                                            "comment": "dolor",
                                            "date": "velit esse",
                                            "length": -55733095,
                                            "last_modified": -73913268,
                                            "track_no": -5938887,
                                            "artists": [
                                                {
                                                    "__model__": "minim voluptate ex culpa eu",
                                                    "name": "dolo"
                                                }
                                            ],
                                            "genre": "cillum occaecat ullamco consequat",
                                            "musicbrainz_id": "exercitation minim amet Ut labore",
                                            "bitrate": 53052794
                                        }
                                    },
                                    {
                                        "track": {
                                            "album": {
                                                "__model__": "u",
                                                "name": "magna dolor exercitatio"
                                            },
                                            "composers": [
                                                {
                                                    "__model__": "ullamco ",
                                                    "name": "reprehenderit est ad en"
                                                },
                                                {
                                                    "__model__": "",
                                                    "name": "aliqua sunt Excepteur quis"
                                                },
                                                {
                                                    "__model__": "reprehenderit ex sed in",
                                                    "name": "laboris eu Ut amet"
                                                },
                                                {
                                                    "__model__": "labore ve",
                                                    "name": "in nisi magna labore ullamco"
                                                }
                                            ],
                                            "__model__": "esse ullamco",
                                            "name": "incididunt ex consequat ut officia",
                                            "performers": [
                                                {
                                                    "__model__": "exercitation velit Excepteur laboris",
                                                    "name": "mollit commodo dolor tempor"
                                                },
                                                {
                                                    "__model__": "adipisicing fugiat tempor",
                                                    "name": "veli"
                                                },
                                                {
                                                    "__model__": "reprehenderit voluptate qui",
                                                    "name": "ullamco non Lorem"
                                                }
                                            ],
                                            "disc_no": -99670002,
                                            "uri": "nulla dolor culpa",
                                            "comment": "dolore nisi sed culpa ullamco",
                                            "date": "culpa exercitation sit ex Excepteur",
                                            "length": 67198360,
                                            "last_modified": -24481689,
                                            "track_no": 8793664,
                                            "artists": [
                                                {
                                                    "__model__": "ex eu fugiat",
                                                    "name": "aute irure laborum est"
                                                },
                                                {
                                                    "__model__": "sed",
                                                    "name": "sed amet incididunt Duis"
                                                }
                                            ],
                                            "genre": "veniam",
                                            "musicbrainz_id": "amet deserunt ea in cu",
                                            "bitrate": 99163758
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tracks": {
            "get": {
                "operationId": "get-track",
                "summary": "Get track",
                "tags": [
                    "Tracks"
                ],
                "description": "# Get information about a track\n\nGet information about a track by sending its ([mopidy uri](https://docs.mopidy.com/en/latest/api/backend/#uris-and-routing-of-requests-to-the-backend) as a query parameter, example: `spotify:track:1CBnhr9hudZ73rQTZ1RBHk`.\n\n## Success\nIf the track was found in the library the response status code is `200`. A representation of the track is returned in the response body.\n\n## Error\nIf the track was not found in the library the response status code is `404`, and the body contains an error message.  \n\nFor other errors the response status code is `400`, and the body contains an error message.  \n\nFor errors in the backend the response status code is `500`, and the body contains an error message.",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "track": {
                                    "type": "object",
                                    "properties": {
                                        "album": {
                                            "type": "object",
                                            "properties": {
                                                "__model__": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "__model__",
                                                "name"
                                            ]
                                        },
                                        "composers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "__model__": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "__model__",
                                                    "name"
                                                ]
                                            }
                                        },
                                        "__model__": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "performers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "__model__": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "__model__",
                                                    "name"
                                                ]
                                            }
                                        },
                                        "disc_no": {
                                            "type": "integer"
                                        },
                                        "uri": {
                                            "type": "string"
                                        },
                                        "comment": {
                                            "type": "string"
                                        },
                                        "date": {
                                            "type": "string"
                                        },
                                        "length": {
                                            "type": "integer"
                                        },
                                        "last_modified": {
                                            "type": "integer"
                                        },
                                        "track_no": {
                                            "type": "integer"
                                        },
                                        "artists": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "__model__": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "__model__",
                                                    "name"
                                                ]
                                            }
                                        },
                                        "genre": {
                                            "type": "string"
                                        },
                                        "musicbrainz_id": {
                                            "type": "string"
                                        },
                                        "bitrate": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "album",
                                        "__model__",
                                        "name",
                                        "uri",
                                        "length",
                                        "last_modified",
                                        "track_no",
                                        "artists"
                                    ]
                                }
                            },
                            "required": [
                                "track"
                            ]
                        }
                    }
                }
            }
        },
        "/session/users": {
            "post": {
                "operationId": "add-user",
                "summary": "Add user",
                "tags": [
                    "Session"
                ],
                "description": "# Add a user to the session\n\nA user is identified by its **unique** username. The username for the user to be added to the session is specified in the attribute `username` in the json object of the request body.\n\n## Success\n\n\n## Errors\nIf the username is invalid or an user with that username already exists in the session, a response will have the error code `400` and an error message in the body.  \n\nFor errors in the backend the response status code is `500`, and the body contains an error message.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "username"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "operationId": "get-users",
                "summary": "Get users",
                "tags": [
                    "Session"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "user": {
                                    "type": "object",
                                    "properties": {
                                        "username": "string"
                                    },
                                    "required": [
                                        "username"
                                    ]
                                }
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "user": {
                                        "username": "string"
                                    }
                                },
                                {
                                    "user": {
                                        "username": "string"
                                    }
                                },
                                {
                                    "user": {
                                        "username": "string"
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "operationId": "remove-user",
                "summary": "Remove user",
                "tags": [
                    "Session"
                ],
                "description": "# Remove a user from the session\n\nA user is identified by its **unique** username. The username for the user to be removed from the session is specified in the attribute `username` in the json object of the request body.\n\n## Success\n\n\n## Errors\nIf an user with that username does not exists in the session, a response will have the error code `404` and an error message in the body.  \n\nFor errors in the backend the response status code is `500`, and the body contains an error message.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "username"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/session": {
            "post": {
                "operationId": "start-session",
                "summary": "Start session",
                "tags": [
                    "Session"
                ],
                "description": "# Create a new session\n\nCreate a new session with the given title.\nEach session must have an admin user. \n\nThe sessoin title and username for the admin is specified in the attributes `session_name` and `admin_username` in the json body of the request.\n\n## Errors\nOnly one session can be run on the device. If there already is a session the response will have status code `400` and an error message in the body.  \n\nFor errors in the backend the response status code is `500`, and the body contains an error message.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "session_name": {
                                    "type": "string"
                                },
                                "admin_username": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "session_name",
                                "admin_username"
                            ],
                            "example": {
                                "session_name": "irure",
                                "admin_name": "in qui Lorem velit"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "session_name": {
                                    "type": "string"
                                },
                                "admin_username": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tracklist/tracks": {
            "post": {
                "operationId": "add-track",
                "summary": "Add track",
                "tags": [
                    "Tracklist"
                ],
                "description": "# Add a track to the tracklist\nA track is identified by its track uri ([mopidy uris](https://docs.mopidy.com/en/latest/api/backend/#uris-and-routing-of-requests-to-the-backend) are unique identifiers used by the mopidy backend and backend extensions), example: `spotify:track:1CBnhr9hudZ73rQTZ1RBHk`.  \n\nThe track uri for the track to be added is specified in the query parameter **uri**.\n\n## Success\nIf the track was successfully added to the tracklist the response status code is `200`. A representation of the track is returned in the response body.\n\n\n## Errors\nIf the track to be added was not found the response status code is `404`, and the body contains an error message.  \n\nFor other errors the response status code is `400`, and the body contains an error message.  \n\nFor errors in the backend the response status code is `500`, and the body contains an error message.",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "track": {
                                    "type": "object",
                                    "properties": {
                                        "album": {
                                            "type": "object",
                                            "properties": {
                                                "__model__": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "__model__",
                                                "name"
                                            ]
                                        },
                                        "composers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "__model__": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "__model__",
                                                    "name"
                                                ]
                                            }
                                        },
                                        "__model__": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "performers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "__model__": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "__model__",
                                                    "name"
                                                ]
                                            }
                                        },
                                        "disc_no": {
                                            "type": "integer"
                                        },
                                        "uri": {
                                            "type": "string"
                                        },
                                        "comment": {
                                            "type": "string"
                                        },
                                        "date": {
                                            "type": "string"
                                        },
                                        "length": {
                                            "type": "integer"
                                        },
                                        "last_modified": {
                                            "type": "integer"
                                        },
                                        "track_no": {
                                            "type": "integer"
                                        },
                                        "artists": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "__model__": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "__model__",
                                                    "name"
                                                ]
                                            }
                                        },
                                        "genre": {
                                            "type": "string"
                                        },
                                        "musicbrainz_id": {
                                            "type": "string"
                                        },
                                        "bitrate": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "album",
                                        "__model__",
                                        "name",
                                        "uri",
                                        "length",
                                        "last_modified",
                                        "track_no",
                                        "artists"
                                    ]
                                }
                            },
                            "required": [
                                "track"
                            ]
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "operationId": "remove-track",
                "summary": "Remove track",
                "tags": [
                    "Tracklist"
                ],
                "description": "# Remove a track from the tracklist\nA track is identified by its track uri ([mopidy uris](https://docs.mopidy.com/en/latest/api/backend/#uris-and-routing-of-requests-to-the-backend) are unique identifiers used by the mopidy backend and backend extensions), example: `spotify:track:1CBnhr9hudZ73rQTZ1RBHk`.  \n\nThe track uri for the track to be deleted is specified in the query parameter **uri**.\n\n## Success\nIf the track was successfully removed from the tracklist the response status code is `200`. A representation of the track is returned in the response body.\n\n## Errors\nFor client errors the response status code is `400`, and the body contains an error message.  \n\nFor errors int the backend the response status code is `500`, and the body contains an error message.",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "track": {
                                    "type": "object",
                                    "properties": {
                                        "album": {
                                            "type": "object",
                                            "properties": {
                                                "__model__": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "__model__",
                                                "name"
                                            ]
                                        },
                                        "composers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "__model__": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "__model__",
                                                    "name"
                                                ]
                                            }
                                        },
                                        "__model__": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "performers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "__model__": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "__model__",
                                                    "name"
                                                ]
                                            }
                                        },
                                        "disc_no": {
                                            "type": "integer"
                                        },
                                        "uri": {
                                            "type": "string"
                                        },
                                        "comment": {
                                            "type": "string"
                                        },
                                        "date": {
                                            "type": "string"
                                        },
                                        "length": {
                                            "type": "integer"
                                        },
                                        "last_modified": {
                                            "type": "integer"
                                        },
                                        "track_no": {
                                            "type": "integer"
                                        },
                                        "artists": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "__model__": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "__model__",
                                                    "name"
                                                ]
                                            }
                                        },
                                        "genre": {
                                            "type": "string"
                                        },
                                        "musicbrainz_id": {
                                            "type": "string"
                                        },
                                        "bitrate": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "album",
                                        "__model__",
                                        "name",
                                        "uri",
                                        "length",
                                        "last_modified",
                                        "track_no",
                                        "artists"
                                    ]
                                }
                            },
                            "required": [
                                "track"
                            ]
                        }
                    }
                }
            },
            "get": {
                "operationId": "get-tracklist",
                "summary": "Get tracklist",
                "tags": [
                    "Tracklist"
                ],
                "description": "# Get tracklist\nGet a list of tracks currently in the tracklist\n\n\n## Success\nWith a successfull request the response status code is `200`. A representation of the tracklist is returned in the response body. \n\n\n## Errors\nFor client errors the response status code is `400`, and the body contains an error message.  \n\nFor errors int the backend the response status code is `500`, and the body contains an error message.",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "track": {
                                    "type": "object",
                                    "required": [
                                        "album",
                                        "__model__",
                                        "name",
                                        "uri",
                                        "length",
                                        "last_modified",
                                        "track_no",
                                        "artists"
                                    ],
                                    "properties": {
                                        "album": {
                                            "type": "object",
                                            "required": [
                                                "__model__",
                                                "name"
                                            ],
                                            "properties": {
                                                "__model__": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "composers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "__model__": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "__model__",
                                                    "name"
                                                ]
                                            }
                                        },
                                        "__model__": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "performers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "__model__": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "__model__",
                                                    "name"
                                                ]
                                            }
                                        },
                                        "disc_no": {
                                            "type": "integer"
                                        },
                                        "uri": {
                                            "type": "string"
                                        },
                                        "comment": {
                                            "type": "string"
                                        },
                                        "date": {
                                            "type": "string"
                                        },
                                        "length": {
                                            "type": "integer"
                                        },
                                        "last_modified": {
                                            "type": "integer"
                                        },
                                        "track_no": {
                                            "type": "integer"
                                        },
                                        "artists": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "__model__": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "__model__",
                                                    "name"
                                                ]
                                            }
                                        },
                                        "genre": {
                                            "type": "string"
                                        },
                                        "musicbrainz_id": {
                                            "type": "string"
                                        },
                                        "bitrate": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "track"
                            ]
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "track": {
                                        "album": {
                                            "__model__": "velit id veniam laboris",
                                            "name": "mollit proident et magna"
                                        },
                                        "__model__": "amet sint pariatur sed ut",
                                        "name": "qui dolore",
                                        "uri": "tempor",
                                        "length": 75040409,
                                        "last_modified": 34216608,
                                        "track_no": -32567458,
                                        "artists": [
                                            {
                                                "__model__": "consequat",
                                                "name": "adipisicing ut et id"
                                            },
                                            {
                                                "__model__": "et elit cillum pariatur id",
                                                "name": ""
                                            },
                                            {
                                                "__model__": "sed nulla ex officia",
                                                "name": "laborum"
                                            }
                                        ],
                                        "bitrate": 98700304,
                                        "musicbrainz_id": "magna Lorem Duis",
                                        "genre": "dolor ut proident"
                                    }
                                },
                                {
                                    "track": {
                                        "album": {
                                            "__model__": "commodo esse non ci",
                                            "name": "ullamco velit"
                                        },
                                        "__model__": "dolor",
                                        "name": "minim eu qui ",
                                        "uri": "consequat occaecat mollit",
                                        "length": 31066063,
                                        "last_modified": 26223258,
                                        "track_no": -12873270,
                                        "artists": [
                                            {
                                                "__model__": "consequat ad laborum officia",
                                                "name": "incididunt cupidatat eu irure"
                                            },
                                            {
                                                "__model__": "ut commodo magna Ut dolor",
                                                "name": "Ut"
                                            },
                                            {
                                                "__model__": "sed ullamco exercitation cupidatat",
                                                "name": "do sunt"
                                            }
                                        ],
                                        "performers": [
                                            {
                                                "__model__": "voluptate",
                                                "name": "do"
                                            },
                                            {
                                                "__model__": "anim est dolore sunt",
                                                "name": "nostrud "
                                            },
                                            {
                                                "__model__": "amet laboris",
                                                "name": "anim"
                                            }
                                        ],
                                        "comment": "pariatur Excepteur"
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tracklist/votes": {
            "put": {
                "operationId": "add-vote",
                "summary": "Increase vote count",
                "tags": [
                    "Tracklist"
                ],
                "description": "# Increase vote count\n\nIncrease the vote count for a track in the tracklist. The track for which to increase the vote count is identified by the [mopidy uri](https://docs.mopidy.com/en/latest/api/backend/#uris-and-routing-of-requests-to-the-backend) given as a query parameter.\n\nThe vote count is increased by one for each request.\n\n## Success\nThe tracks vote count was increased by 1. Status code of response is `200`, the current vote count is the attribute `vote_count` returned in the response body.\n\n## Errors\nIf the track is not in the tracklist the response status code is `404`.  \n\nFor client errors the response status code is `400`, and the body contains an error message.  \n\nFor errors int the backend the response status code is `500`, and the body contains an error message.",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "vote_count": {
                                    "type": "string"
                                },
                                "track_uri": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {}
}