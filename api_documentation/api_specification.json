{
    "swagger": "2.0",
    "info": {
        "version": "v1",
        "title": "Kill the DJ",
        "description": "API for session and tracklist management in the Kill the DJ mopidy extension"
    },
    "host": "localhost:6680",
    "basePath": "/killthedj",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/searches": {
            "post": {
                "operationId": "search",
                "summary": "Search",
                "tags": [
                    "Tracks"
                ],
                "description": "Search the library for tracks where ``query`` contains attributes ``uri``, ``track_name``, ``album``, ``artist``,\n``albumartist``, ``composer``, ``performer``, ``track_no``, ``genre``,\n``date``, ``comment`` or ``any``. Any of the query attributes is an array of strings, where the string items are the strings for which that attributes is matched against in the backend. \n\nIf ``uris`` is given, the search is limited to results from within the\nURI roots. For example passing ``{\"uris\": [\"file:\"]}`` will limit the search\nto the local backend.\n\n### Attributes\n- `query` – one or more queries to search for  \n- `uris` (list of string or None) – zero or more URI roots to limit the search to  \n- `exact` (bool) – if the search should use exact matching\n\n### Examples\n\n- Returns results matching 'a' in any backend:  \n```json\n{\n  \"query\": {\n    \"any\": [\"a\"]\n  }\n}\n```\n\n- Returns results matching artist 'xyz' in any backend:  \n```json\n{\n  \"query\": {\n    \"artist\": [\"xyz\"]\n  }\n}\n```\n\n- Returns results matching 'a' and 'b' and artist 'xyz' in any backend:  \n```json\n{\n  \"query\": {\n    \"any\": [\"a\", \"b\"],\n    \"artist\": [\"xyz\"]\n  }\n}\n```\n\n- Returns results matching 'a' if within the given URI roots\n\"file:///media/music\" and \"spotify:\":  \n\n```json\n{\n  \"query\": {\n    \"any\": [\"a\"]\n  },\n  \"uris\": [\"file:///media/music\", \"spotify:\"]\n}\n```\n\n- Returns results matching artist 'xyz' and 'abc' in any backend:  \n```json\n{\n  \"query\": {\n    \"artist\": [\"xyz\", \"abc\"]\n  }\n}\n```\n\n## Success\nA successful request has returns an array of serach results, with status code `201`. Every item in the array is a json representation of a [mopidy data model](https://docs.mopidy.com/en/latest/api/models/#module-mopidy.models), e.g. `Track`, `Artist`, `Album` etc.\n\n## Errors\nFor client errors the response status code is `400`, and the body contains an error message. For example a malformed search request.\n\nFor errors in the backend the response status code is `500`, and the body contains an error message.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "query": {
                                    "type": "object",
                                    "properties": {
                                        "uri": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "track_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "album": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "artist": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "albumartist": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "composer": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "performer": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "track_no": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "genre": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "date": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "comment": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "any": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "uris": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "exact": {
                                    "type": "boolean"
                                }
                            },
                            "example": {
                                "query": {
                                    "any": [
                                        "a"
                                    ]
                                },
                                "uris": [
                                    "spotify:"
                                ],
                                "exact": true
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "result": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "track": {
                                                "type": "object",
                                                "required": [
                                                    "album",
                                                    "__model__",
                                                    "name",
                                                    "uri",
                                                    "length",
                                                    "last_modified",
                                                    "track_no",
                                                    "artists"
                                                ],
                                                "properties": {
                                                    "album": {
                                                        "type": "object",
                                                        "required": [
                                                            "__model__",
                                                            "name"
                                                        ],
                                                        "properties": {
                                                            "__model__": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "composers": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "__model__": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "__model__",
                                                                "name"
                                                            ]
                                                        }
                                                    },
                                                    "__model__": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "performers": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "__model__": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "__model__",
                                                                "name"
                                                            ]
                                                        }
                                                    },
                                                    "disc_no": {
                                                        "type": "integer"
                                                    },
                                                    "uri": {
                                                        "type": "string"
                                                    },
                                                    "comment": {
                                                        "type": "string"
                                                    },
                                                    "date": {
                                                        "type": "string"
                                                    },
                                                    "length": {
                                                        "type": "integer"
                                                    },
                                                    "last_modified": {
                                                        "type": "integer"
                                                    },
                                                    "track_no": {
                                                        "type": "integer"
                                                    },
                                                    "artists": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "__model__": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "__model__",
                                                                "name"
                                                            ]
                                                        }
                                                    },
                                                    "genre": {
                                                        "type": "string"
                                                    },
                                                    "musicbrainz_id": {
                                                        "type": "string"
                                                    },
                                                    "bitrate": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        },
                                        "required": [
                                            "track"
                                        ]
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "result": [
                                    {
                                        "track": {
                                            "album": {
                                                "__model__": "in est ir",
                                                "name": "aliquip velit dese"
                                            },
                                            "composers": [
                                                {
                                                    "__model__": "fugiat reprehenderit ex",
                                                    "name": "pariatur do dolor ullamco"
                                                },
                                                {
                                                    "__model__": "aute in",
                                                    "name": "officia ipsum anim commodo"
                                                },
                                                {
                                                    "__model__": "officia esse laboris ipsum",
                                                    "name": "veniam sint nulla exercitation"
                                                }
                                            ],
                                            "__model__": "elit",
                                            "name": "cillum laborum in deserunt Duis",
                                            "performers": [
                                                {
                                                    "__model__": "ullamco laboris",
                                                    "name": "commodo dolore laboris id anim"
                                                },
                                                {
                                                    "__model__": "Duis dolor",
                                                    "name": "cupidatat consequat occaecat"
                                                },
                                                {
                                                    "__model__": "mollit ut cillum incididunt",
                                                    "name": "mollit Duis"
                                                },
                                                {
                                                    "__model__": "dolore ut commodo",
                                                    "name": "pariatur Excepteur "
                                                }
                                            ],
                                            "disc_no": 88765901,
                                            "uri": "fugiat enim ut Excepteur id",
                                            "comment": "culpa",
                                            "date": "fugiat dolo",
                                            "length": 31000023,
                                            "last_modified": -73172010,
                                            "track_no": -72609450,
                                            "artists": [
                                                {
                                                    "__model__": "qui voluptate",
                                                    "name": "laborum non labore"
                                                }
                                            ],
                                            "genre": "irure in voluptate sed ipsum",
                                            "musicbrainz_id": "do ullamco veniam",
                                            "bitrate": 71475157
                                        }
                                    },
                                    {
                                        "track": {
                                            "album": {
                                                "__model__": "amet",
                                                "name": "aliquip cupidatat"
                                            },
                                            "composers": [
                                                {
                                                    "__model__": "Excepteur velit et",
                                                    "name": "nulla"
                                                }
                                            ],
                                            "__model__": "sunt veniam dolore qui",
                                            "name": "in",
                                            "performers": [
                                                {
                                                    "__model__": "irure",
                                                    "name": "ut reprehenderit"
                                                }
                                            ],
                                            "disc_no": -70645375,
                                            "uri": "mo",
                                            "comment": "dolor",
                                            "date": "velit esse",
                                            "length": -55733095,
                                            "last_modified": -73913268,
                                            "track_no": -5938887,
                                            "artists": [
                                                {
                                                    "__model__": "minim voluptate ex culpa eu",
                                                    "name": "dolo"
                                                }
                                            ],
                                            "genre": "cillum occaecat ullamco consequat",
                                            "musicbrainz_id": "exercitation minim amet Ut labore",
                                            "bitrate": 53052794
                                        }
                                    },
                                    {
                                        "track": {
                                            "album": {
                                                "__model__": "u",
                                                "name": "magna dolor exercitatio"
                                            },
                                            "composers": [
                                                {
                                                    "__model__": "ullamco ",
                                                    "name": "reprehenderit est ad en"
                                                },
                                                {
                                                    "__model__": "",
                                                    "name": "aliqua sunt Excepteur quis"
                                                },
                                                {
                                                    "__model__": "reprehenderit ex sed in",
                                                    "name": "laboris eu Ut amet"
                                                },
                                                {
                                                    "__model__": "labore ve",
                                                    "name": "in nisi magna labore ullamco"
                                                }
                                            ],
                                            "__model__": "esse ullamco",
                                            "name": "incididunt ex consequat ut officia",
                                            "performers": [
                                                {
                                                    "__model__": "exercitation velit Excepteur laboris",
                                                    "name": "mollit commodo dolor tempor"
                                                },
                                                {
                                                    "__model__": "adipisicing fugiat tempor",
                                                    "name": "veli"
                                                },
                                                {
                                                    "__model__": "reprehenderit voluptate qui",
                                                    "name": "ullamco non Lorem"
                                                }
                                            ],
                                            "disc_no": -99670002,
                                            "uri": "nulla dolor culpa",
                                            "comment": "dolore nisi sed culpa ullamco",
                                            "date": "culpa exercitation sit ex Excepteur",
                                            "length": 67198360,
                                            "last_modified": -24481689,
                                            "track_no": 8793664,
                                            "artists": [
                                                {
                                                    "__model__": "ex eu fugiat",
                                                    "name": "aute irure laborum est"
                                                },
                                                {
                                                    "__model__": "sed",
                                                    "name": "sed amet incididunt Duis"
                                                }
                                            ],
                                            "genre": "veniam",
                                            "musicbrainz_id": "amet deserunt ea in cu",
                                            "bitrate": 99163758
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tracks": {
            "get": {
                "operationId": "get-track",
                "summary": "Get track",
                "tags": [
                    "Tracks"
                ],
                "description": "# Get information about a track\n\nGet information about a track by sending its ([mopidy uri](https://docs.mopidy.com/en/latest/api/backend/#uris-and-routing-of-requests-to-the-backend) as a parameter in the json body, \nexample: \n```json\n{\n  \"uri\": \"spotify:track:1CBnhr9hudZ73rQTZ1RBHk\"\n}\n```\n\n## Success\nIf the track was found in the library the response status code is `200`. A representation of the track is returned in the response body.\n\n## Error\nIf the track was not found in the library the response status code is `404`, and the body contains an error message.  \n\nFor other errors the response status code is `400`, and the body contains an error message.  \n\nFor errors in the backend the response status code is `500`, and the body contains an error message.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "uri": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "uri"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "album": {
                                    "type": "object",
                                    "properties": {
                                        "date": {
                                            "type": "string"
                                        },
                                        "__model__": {
                                            "type": "string"
                                        },
                                        "artists": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "__model__": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "uri": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "__model__",
                                                    "name",
                                                    "uri"
                                                ]
                                            }
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "uri": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "date",
                                        "__model__",
                                        "artists",
                                        "name",
                                        "uri"
                                    ]
                                },
                                "__model__": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "disc_no": {
                                    "type": "integer"
                                },
                                "uri": {
                                    "type": "string"
                                },
                                "length": {
                                    "type": "integer"
                                },
                                "track_no": {
                                    "type": "integer"
                                },
                                "artists": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "__model__": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "uri": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "__model__",
                                            "name",
                                            "uri"
                                        ]
                                    }
                                },
                                "date": {
                                    "type": "string"
                                },
                                "bitrate": {
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "uri"
                            ]
                        },
                        "examples": {
                            "application/json": {
                                "uri": "dolore",
                                "length": -79591288,
                                "track_no": 3994264,
                                "artists": [
                                    {
                                        "__model__": "cillum occaecat veniam nulla",
                                        "name": "qui deserunt laborum et",
                                        "uri": "dolore est"
                                    },
                                    {
                                        "__model__": "nulla",
                                        "name": "incididunt",
                                        "uri": "et"
                                    },
                                    {
                                        "__model__": "dolor",
                                        "name": "do Ut",
                                        "uri": "occaecat est Lorem"
                                    },
                                    {
                                        "__model__": "ut enim",
                                        "name": "et voluptate cillum consectetur eiusmod",
                                        "uri": "incididunt dolore Duis veniam"
                                    }
                                ],
                                "date": "nulla irure sit",
                                "bitrate": -66466254,
                                "disc_no": -8046280
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "examples": {
                            "application/json": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "error": "est id occaecat officia"
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "examples": {
                            "application/json": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/session/users": {
            "post": {
                "operationId": "add-user",
                "summary": "Add user",
                "tags": [
                    "Session"
                ],
                "description": "# Add a user to the session\n\nA user is identified by its **unique** username. The username for the user to be added to the session is specified in the attribute `username` in the json object of the request body.\n\n## Success\nThe user was successfully added. The response \nbody contains a representation for the user, including the cookie which is to be included in subsequent request. The cookie uniquely identifies the user. The status code is `201`.\n\n\n## Errors\nIf the username is invalid or an user with that username already exists in the session, a response will have the error code `400` and an error message in the body.  \n\nFor errors in the backend the response status code is `500`, and the body contains an error message.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "username"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "required": [
                                "username",
                                "cookie"
                            ],
                            "properties": {
                                "username": {
                                    "type": "string"
                                },
                                "cookie": {
                                    "type": "string",
                                    "minLength": 64,
                                    "maxLength": 64,
                                    "pattern": "^[a-f0-9]{64}$"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "username": "do in fugiat voluptate",
                                "cookie": "42af7789da49710b1b57973b485d4643e89ced4b88f68ef9598ce2602796a64a"
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "operationId": "get-users",
                "summary": "Get users",
                "tags": [
                    "Session"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "user": {
                                    "type": "object",
                                    "properties": {
                                        "username": {
                                            "type": "string"
                                        },
                                        "is_admin": {
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "username",
                                        "is_admin"
                                    ]
                                }
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "user": {
                                        "username": "dolor fu",
                                        "is_admin": false
                                    }
                                },
                                {
                                    "user": {
                                        "username": "nisi exercitation sed",
                                        "is_admin": true
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "error": "ullamco minim culpa"
                            }
                        }
                    }
                }
            },
            "delete": {
                "operationId": "remove-user",
                "summary": "Remove user",
                "tags": [
                    "Session"
                ],
                "description": "# Remove a user from the session\n\nA user is identified by its **unique** username. The username for the user to be removed from the session is specified in the attribute `username` in the json object of the request body.\n\nOnly the administrator user can remove users from the session. Request requires administrator privileges. The administrator cookie is to be included in the headers to authorize the request.\n\n## Success\nThe user was removed from the session. The respone has status code `200`, and conitains a representation of the removed user.\n\n## Errors\nIf an user with that username does not exists in the session, a response will have the error code `404` and an error message in the body.  \n\nFor errors in the backend the response status code is `500`, and the body contains an error message.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "username"
                            ]
                        }
                    },
                    {
                        "name": "X-KTD-Cookie",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "minLength": 64,
                        "maxLength": 64,
                        "pattern": "^[a-f0-9]{64}$"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "username": "quis elit in est"
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/session": {
            "post": {
                "operationId": "start-session",
                "summary": "Create session",
                "tags": [
                    "Session"
                ],
                "description": "# Create a new session\n\nCreate a new session with the given title.\nEach session must have an admin user. \n\nThe session title and username for the admin is specified in the attributes `session_name` and `admin_username` in the json body of the request.\nThe length of the session and the maximum number of votes a user can use in each round are specified in the attributes `session_length` and `max_votes`.\n\n## Success\nThe session was successfully created. The response \nbody contains a representation for the session, including the admin cookie which is to be included in every request that requires admin privileges. The status code is `201`.\n\n## Errors\nOnly one session can be run on the device. If there already is a session the response will have status code `400` and an error message in the body.  \n\nFor errors in the backend the response status code is `500`, and the body contains an error message.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "session_name": {
                                    "type": "string"
                                },
                                "admin_username": {
                                    "type": "string"
                                },
                                "max_votes": {
                                    "type": "integer",
                                    "minimum": 0
                                },
                                "session_length": {
                                    "type": "integer",
                                    "minimum": 0
                                }
                            },
                            "required": [
                                "session_name",
                                "admin_username",
                                "max_votes",
                                "session_length"
                            ],
                            "example": {
                                "session_name": "ad",
                                "admin_username": "aliqua ut",
                                "max_votes": 19572360,
                                "session_length": 94595671
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "session_name": {
                                    "type": "string"
                                },
                                "admin_user": {
                                    "type": "object",
                                    "required": [
                                        "username",
                                        "cookie"
                                    ],
                                    "properties": {
                                        "username": {
                                            "type": "string"
                                        },
                                        "cookie": {
                                            "type": "string",
                                            "minLength": 64,
                                            "maxLength": 64,
                                            "pattern": "^[a-f0-9]{64}$"
                                        }
                                    }
                                },
                                "max_votes": {
                                    "type": "integer",
                                    "minimum": 0
                                },
                                "session_length": {
                                    "type": "integer",
                                    "minimum": 0
                                }
                            },
                            "required": [
                                "session_name",
                                "admin_user",
                                "max_votes",
                                "session_length"
                            ]
                        },
                        "examples": {
                            "application/json": {
                                "session_name": "nostrud ad fugiat labore pariatur",
                                "admin_user": {
                                    "username": "consequat magna anim ad irure",
                                    "cookie": "77f6ea44284d65194b98996635639fbf1574e51e055f8cf361543ff7aff86647"
                                },
                                "max_votes": 47681676,
                                "session_length": 61685033
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "error": "sit cillum ullamco"
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "error": "qui"
                            }
                        }
                    }
                }
            },
            "get": {
                "operationId": "session-status",
                "summary": "Get session status",
                "tags": [
                    "Session"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "active": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "active": false
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tracklist/playback/current": {
            "get": {
                "operationId": "get-current",
                "summary": "Get current track",
                "tags": [
                    "Tracklist"
                ],
                "description": "# Get the currently playig track\nGet information about the currently playing track.\n\nUsers in the session can get information about the currently playing track. Request requires user privileges. The cookie is to be included in the headers to authorize the request.\n\n## Success\nWith a successful response the status code is `200`, and the uri of the currently playing track is returned in the response body with the key parameter \"uri\".\n\n## Error\nIf there is no track currently playing the response code is `404`, and the body contains an error message.  \n\nFor other errors (caused by the client) the response status code is `400`, and the body contains an error message.  \n\nFor errors in the backend the response status code is `500`, and the body contains an error message.",
                "parameters": [
                    {
                        "name": "X-KTD-Cookie",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "minLength": 64,
                        "maxLength": 64,
                        "pattern": "^[a-f0-9]{64}$"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "uri": {
                                    "type": "string"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "uri": "amet incididunt sit velit"
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "error": "non tempor cupidatat velit"
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "error": "cons"
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tracklist/tracks": {
            "post": {
                "operationId": "add-track",
                "summary": "Add track",
                "tags": [
                    "Tracklist"
                ],
                "description": "# Add a track to the tracklist\nA track is identified by its track uri ([mopidy uris](https://docs.mopidy.com/en/latest/api/backend/#uris-and-routing-of-requests-to-the-backend) are unique identifiers used by the mopidy backend and backend extensions), example: `spotify:track:1CBnhr9hudZ73rQTZ1RBHk`.  \n\nThe track uri for the track to be added is specified in the query parameter **uri**.\n\nOnly users in the session can add tracks to the tracklist. Request requires user privileges. The cookie is to be inccluded in the headers to authorize the request.\n\n## Success\nIf the track was successfully added to the tracklist the response status code is `200`. A representation of the track is returned in the response body.\n\n\n## Errors\nIf the track to be added was not found the response status code is `404`, and the body contains an error message.  \n\nFor other errors the response status code is `400`, and the body contains an error message.  \n\nFor errors in the backend the response status code is `500`, and the body contains an error message.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "uri": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "uri": "qui"
                            }
                        }
                    },
                    {
                        "name": "X-KTD-Cookie",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "minLength": 64,
                        "maxLength": 64,
                        "pattern": "^[a-f0-9]{64}$"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "track": {
                                    "type": "object",
                                    "required": [
                                        "album",
                                        "__model__",
                                        "name",
                                        "uri",
                                        "length",
                                        "last_modified",
                                        "track_no",
                                        "artists"
                                    ],
                                    "properties": {
                                        "album": {
                                            "type": "object",
                                            "required": [
                                                "__model__",
                                                "name"
                                            ],
                                            "properties": {
                                                "__model__": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "composers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "__model__": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "__model__",
                                                    "name"
                                                ]
                                            }
                                        },
                                        "__model__": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "performers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "__model__": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "__model__",
                                                    "name"
                                                ]
                                            }
                                        },
                                        "disc_no": {
                                            "type": "integer"
                                        },
                                        "uri": {
                                            "type": "string"
                                        },
                                        "comment": {
                                            "type": "string"
                                        },
                                        "date": {
                                            "type": "string"
                                        },
                                        "length": {
                                            "type": "integer"
                                        },
                                        "last_modified": {
                                            "type": "integer"
                                        },
                                        "track_no": {
                                            "type": "integer"
                                        },
                                        "artists": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "__model__": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "__model__",
                                                    "name"
                                                ]
                                            }
                                        },
                                        "genre": {
                                            "type": "string"
                                        },
                                        "musicbrainz_id": {
                                            "type": "string"
                                        },
                                        "bitrate": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "track"
                            ]
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "operationId": "remove-track",
                "summary": "Remove track",
                "tags": [
                    "Tracklist"
                ],
                "description": "# Remove a track from the tracklist\nA track is identified by its track uri ([mopidy uris](https://docs.mopidy.com/en/latest/api/backend/#uris-and-routing-of-requests-to-the-backend) are unique identifiers used by the mopidy backend and backend extensions), example: `spotify:track:1CBnhr9hudZ73rQTZ1RBHk`.  \n\nThe track uri for the track to be deleted is specified in the query parameter **uri**.\n\nOnly the administrator user can remove tracks from the trackllist. Request requires administrator privileges. The administrator cookie is to be included in the headers to authorize the request.\n\n## Success\nIf the track was successfully removed from the tracklist the response status code is `200`. A representation of the track is returned in the response body.\n\n## Errors\nFor client errors the response status code is `400`, and the body contains an error message.  \n\nFor errors int the backend the response status code is `500`, and the body contains an error message.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "uri": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "name": "X-KTD-Cookie",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "minLength": 64,
                        "maxLength": 64,
                        "pattern": "^[a-f0-9]{64}$"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "track": {
                                    "type": "object",
                                    "properties": {
                                        "album": {
                                            "type": "object",
                                            "properties": {
                                                "__model__": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "__model__",
                                                "name"
                                            ]
                                        },
                                        "composers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "__model__": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "__model__",
                                                    "name"
                                                ]
                                            }
                                        },
                                        "__model__": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "performers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "__model__": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "__model__",
                                                    "name"
                                                ]
                                            }
                                        },
                                        "disc_no": {
                                            "type": "integer"
                                        },
                                        "uri": {
                                            "type": "string"
                                        },
                                        "comment": {
                                            "type": "string"
                                        },
                                        "date": {
                                            "type": "string"
                                        },
                                        "length": {
                                            "type": "integer"
                                        },
                                        "last_modified": {
                                            "type": "integer"
                                        },
                                        "track_no": {
                                            "type": "integer"
                                        },
                                        "artists": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "__model__": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "__model__",
                                                    "name"
                                                ]
                                            }
                                        },
                                        "genre": {
                                            "type": "string"
                                        },
                                        "musicbrainz_id": {
                                            "type": "string"
                                        },
                                        "bitrate": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "album",
                                        "__model__",
                                        "name",
                                        "uri",
                                        "length",
                                        "last_modified",
                                        "track_no",
                                        "artists"
                                    ]
                                }
                            },
                            "required": [
                                "track"
                            ]
                        }
                    }
                }
            },
            "get": {
                "operationId": "get-tracklist",
                "summary": "Get tracklist",
                "tags": [
                    "Tracklist"
                ],
                "description": "# Get tracklist\nGet a list of tracks currently in the tracklist\n\nOnly users in the session can request the tracklist. Request requires user privileges. The cookie is to be inccluded in the headers to authorize the request.\n\n## Success\nWith a successfull request the response status code is `200`. A representation of the tracklist is returned in the response body. \n\n## Errors\nFor client errors the response status code is `400`, and the body contains an error message.  \n\nFor errors int the backend the response status code is `500`, and the body contains an error message.",
                "parameters": [
                    {
                        "name": "X-KTD-Cookie",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "minLength": 64,
                        "maxLength": 64,
                        "pattern": "^[a-f0-9]{64}$"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "album": {
                                    "type": "object",
                                    "properties": {
                                        "date": {
                                            "type": "string"
                                        },
                                        "__model__": {
                                            "type": "string"
                                        },
                                        "artists": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "__model__": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "uri": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "__model__",
                                                    "name",
                                                    "uri"
                                                ]
                                            }
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "uri": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "date",
                                        "__model__",
                                        "artists",
                                        "name",
                                        "uri"
                                    ]
                                },
                                "__model__": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "disc_no": {
                                    "type": "integer"
                                },
                                "uri": {
                                    "type": "string"
                                },
                                "length": {
                                    "type": "integer"
                                },
                                "track_no": {
                                    "type": "integer"
                                },
                                "artists": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "__model__": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "uri": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "__model__",
                                            "name",
                                            "uri"
                                        ]
                                    }
                                },
                                "date": {
                                    "type": "string"
                                },
                                "bitrate": {
                                    "type": "integer"
                                }
                            },
                            "required": [
                                "uri"
                            ]
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "track": {
                                        "album": {
                                            "__model__": "velit id veniam laboris",
                                            "name": "mollit proident et magna"
                                        },
                                        "__model__": "amet sint pariatur sed ut",
                                        "name": "qui dolore",
                                        "uri": "tempor",
                                        "length": 75040409,
                                        "last_modified": 34216608,
                                        "track_no": -32567458,
                                        "artists": [
                                            {
                                                "__model__": "consequat",
                                                "name": "adipisicing ut et id"
                                            },
                                            {
                                                "__model__": "et elit cillum pariatur id",
                                                "name": ""
                                            },
                                            {
                                                "__model__": "sed nulla ex officia",
                                                "name": "laborum"
                                            }
                                        ],
                                        "bitrate": 98700304,
                                        "musicbrainz_id": "magna Lorem Duis",
                                        "genre": "dolor ut proident"
                                    }
                                },
                                {
                                    "track": {
                                        "album": {
                                            "__model__": "commodo esse non ci",
                                            "name": "ullamco velit"
                                        },
                                        "__model__": "dolor",
                                        "name": "minim eu qui ",
                                        "uri": "consequat occaecat mollit",
                                        "length": 31066063,
                                        "last_modified": 26223258,
                                        "track_no": -12873270,
                                        "artists": [
                                            {
                                                "__model__": "consequat ad laborum officia",
                                                "name": "incididunt cupidatat eu irure"
                                            },
                                            {
                                                "__model__": "ut commodo magna Ut dolor",
                                                "name": "Ut"
                                            },
                                            {
                                                "__model__": "sed ullamco exercitation cupidatat",
                                                "name": "do sunt"
                                            }
                                        ],
                                        "performers": [
                                            {
                                                "__model__": "voluptate",
                                                "name": "do"
                                            },
                                            {
                                                "__model__": "anim est dolore sunt",
                                                "name": "nostrud "
                                            },
                                            {
                                                "__model__": "amet laboris",
                                                "name": "anim"
                                            }
                                        ],
                                        "comment": "pariatur Excepteur"
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tracklist/votes": {
            "delete": {
                "operationId": "add-vote",
                "summary": "Decrease vote count",
                "tags": [
                    "Tracklist"
                ],
                "description": "# Decrease vote count\n\nDecrease the vote count for a track in the tracklist. The track for which to decrease the vote count is identified by the [mopidy uri](https://docs.mopidy.com/en/latest/api/backend/#uris-and-routing-of-requests-to-the-backend) given as a parameter in the json body.\n\nThe vote count is decreased by 1 for each request. The new votecount is return in the response. If the vote count is already 0 it is not decreased and an error response is returned. \n\nUsers in the session can get vote for tracks in the tracklist. Request requires user privileges. The cookie is to be included in the headers to authorize the request.\n\n## Success\nThe tracks vote count was decreased by 1. Status code of response is `200`, the current vote count is the attribute `vote_count` returned in the response body.\n\n## Errors\nIf the track is not in the tracklist the response status code is `404`. \n\nIf the vote count is already zero when the request is recieved the response will have status code `409` and an error message.  \n\nFor client errors the response status code is `400`, and the body contains an error message.  \n\nFor errors int the backend the response status code is `500`, and the body contains an error message.",
                "parameters": [
                    {
                        "name": "uri",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "X-KTD-Cookie",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "minLength": 64,
                        "maxLength": 64,
                        "pattern": "^[a-f0-9]{64}$"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "track_uri": {
                                    "type": "string"
                                },
                                "vote_count": {
                                    "type": "integer"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "track": {
                                    "": "commodo culpa anim do Duis"
                                },
                                "vote_count": 7735077
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "add-vote",
                "summary": "Increase vote count",
                "tags": [
                    "Tracklist"
                ],
                "description": "# Increase vote count\n\nIncrease the vote count for a track in the tracklist. The track for which to increase the vote count is identified by the [mopidy uri](https://docs.mopidy.com/en/latest/api/backend/#uris-and-routing-of-requests-to-the-backend) given as a parameter in the json body.\n\nThe vote count is increased by one for each request.\n\nUsers in the session can get vote for tracks in the tracklist. Request requires user privileges. The cookie is to be included in the headers to authorize the request.\n\n## Success\nThe tracks vote count was increased by 1. Status code of response is `200`, the current vote count is the attribute `vote_count` returned in the response body.\n\n## Errors\nIf the track is not in the tracklist the response status code is `404`.  \n\nFor client errors the response status code is `400`, and the body contains an error message.  \n\nFor errors int the backend the response status code is `500`, and the body contains an error message.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "uri": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "uri"
                            ]
                        }
                    },
                    {
                        "name": "X-KTD-Cookie",
                        "in": "header",
                        "required": true,
                        "type": "string",
                        "minLength": 64,
                        "maxLength": 64,
                        "pattern": "^[a-f0-9]{64}$"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "vote_count": {
                                    "type": "string"
                                },
                                "track_uri": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {}
}